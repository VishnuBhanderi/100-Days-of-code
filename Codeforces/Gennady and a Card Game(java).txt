package Check;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.io.*;

public class Problem {

	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

	public static long findMinRec(long arr[], long i, long sumCalculated, long sumTotal) {

		if (i == 0)
			return Math.abs((sumTotal - sumCalculated) - sumCalculated);

		return Math.min(findMinRec(arr, i - 1, sumCalculated + arr[(int) (i - 1)], sumTotal),
				findMinRec(arr, i - 1, sumCalculated, sumTotal));
	}

	public static int findMin(long arr[], long n) {

		long sumTotal = 0;
		for (int i = 0; i < n; i++)
			sumTotal += arr[i];

		return (int) findMinRec(arr, n, 0, sumTotal);
	}

	public static void main(String[] args) throws Exception {

		FastReader sc = new FastReader();
		BufferedWriter ou = new BufferedWriter(new OutputStreamWriter(System.out));

		String c = sc.nextLine();
		char rank = c.charAt(0);
		char suit = c.charAt(1);
		String ca = sc.nextLine();
		boolean win = false;
		for (int i = 0; i < 13; i = i + 3) {
			if (ca.charAt(i) == rank) {
				ou.write("YES");
				win = true;
				break;
			} else if (ca.charAt(i + 1) == suit) {
				ou.write("YES");
				win = true;
				break;
			}

		}
		if(win==false) {
			ou.write("NO");
		}

		ou.flush();
	}
}
